[{"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/index.js":"1","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/App.js":"2","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/context.js":"3","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/Toolbar.js":"4","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/BookList.js":"5","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/services/RoomService.js":"6","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/services/api.js":"7","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/NewBook.js":"8","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/Rooms.js":"9","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/NewRoom.js":"10","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/Bookcases.js":"11","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/NewBookcase.js":"12"},{"size":197,"mtime":1606927081962,"results":"13","hashOfConfig":"14"},{"size":519,"mtime":1643317131734,"results":"15","hashOfConfig":"14"},{"size":2110,"mtime":1643402578268,"results":"16","hashOfConfig":"14"},{"size":883,"mtime":1638462240521,"results":"17","hashOfConfig":"14"},{"size":1221,"mtime":1638462975656,"results":"18","hashOfConfig":"14"},{"size":159,"mtime":1635867760813,"results":"19","hashOfConfig":"14"},{"size":46,"mtime":1635867727409,"results":"20","hashOfConfig":"14"},{"size":2317,"mtime":1638462950340,"results":"21","hashOfConfig":"14"},{"size":424,"mtime":1643317142014,"results":"22","hashOfConfig":"14"},{"size":6897,"mtime":1643398474636,"results":"23","hashOfConfig":"14"},{"size":471,"mtime":1643317075996,"results":"24","hashOfConfig":"14"},{"size":3401,"mtime":1643819549869,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"10yikme",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/index.js",[],["52","53"],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/App.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/context.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/Toolbar.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/BookList.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/services/RoomService.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/services/api.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/NewBook.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/Rooms.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/NewRoom.js",["54"],"import { useState, useRef, useEffect, useContext } from \"react\";\nimport { ADD_ROOM, Context, REMOVE_ROOM, SET_CURRENT, UPDATE_ROOM } from '../context'\n\nconst NewRoom = () => {\n\n  const { rooms, dispatch } = useContext(Context)\n\n  const defaultRoom = { height: 10, width: 10, tile: 25, roomName: \"New Room\", bookcases: [] }\n\n  let [rIndex, setRIndex] = useState(0)\n\n  const currentRoom = rooms.length && rooms[rIndex] ? rooms[rIndex] : defaultRoom\n\n  let [height, setHeight] = useState(currentRoom.height);\n  let [width, setWidth] = useState(currentRoom.width);\n  let [tile, setTile] = useState(currentRoom.tile);\n  let [roomName, setRoomName] = useState(currentRoom.roomName);\n\n  let [bcStart, setBcStart] = useState(\"\");\n  let [bcEnd, setBcEnd] = useState(\"\");\n\n  let [bookcases, setBookcases] = useState(currentRoom.bookcases)\n\n  let mapRef = useRef();\n  let mount = useRef()\n\n  useEffect(() => { \n    if (mount.current) \n      switchRoom(0, rooms)\n    else\n      mount.current = true\n  }, [rooms.length])\n\n  useEffect(() => {\n    let map = mapRef.current;\n    map.innerHTML = \"\";\n    map.style.gridTemplateColumns = `repeat(${width}, ${tile}px)`;\n    map.style.gridTemplateRows = `repeat(${height}, ${tile}px)`;\n\n    for (let r = 1; r <= height; r++) {\n      for (let c = 1; c <= width; c++) {\n        let div = document.createElement(\"div\");\n        div.setAttribute(\"class\", `box r-${r}-c-${c}`);\n\n        if (\n          (bcStart[0] === r && bcStart[1] === c) ||\n          (bcEnd[0] === r && bcEnd[1] === c)\n        ) {\n          div.style.backgroundColor = \"blue\";\n        }\n\n        let currentBookcase;\n\n        let tiles = bookcases.length ? bookcases.some(b => {\n            let result = (r >= b.rowLow && r <= b.rowHigh) && (c >= b.colLow && c <= b.colHigh)\n            if (result) currentBookcase = b\n            return result\n        }) : false\n\n        if (tiles) {\n            console.log(currentBookcase.color)\n            div.style.backgroundColor = currentBookcase.color\n        }\n\n        map.appendChild(div);\n      }\n    }\n  }, [height, width, tile, bcStart, bcEnd, bookcases]);\n\n  const randomNum = () => Math.floor(Math.random() * 255)\n\n  const handleBoxClick = (e) => {\n    if (e.target.className[0] !== \"b\") return\n    let [row, column] = e.target.className\n      .split(\" \")[1]\n      .split(\"-\")\n      .filter((c) => c !== \"r\" && c !== \"c\");\n\n    row = Number(row)\n    column = Number(column)\n\n    let currentBookcase;\n\n    let overlap = bookcases.some(b => {\n      let result = (row >= b.rowLow && row <= b.rowHigh) && (column >= b.colLow && column <= b.colHigh)\n      if (result) currentBookcase = b\n      return result\n    })\n\n    if (overlap) {\n      console.log(\"clicked on: \" + currentBookcase.id)\n      setBcStart('')\n      setBcEnd('')\n      dispatch({ type: SET_CURRENT, payload: { rm: currentRoom.id, bc: currentBookcase.id }})\n      //setCurrent({ rm: currentRoom.id, bc: currentBookcase.id })\n      return \n    }\n\n    if (!bcStart) {\n      setBcStart([row, column])\n    } else if (bcStart && !bcEnd) {\n      setBcEnd([row, column])\n    } else {\n\n        let newBc = {\n            rowLow: Math.min(bcStart[0], bcEnd[0]),\n            colLow: Math.min(bcStart[1], bcEnd[1]),\n            rowHigh: Math.max(bcStart[0], bcEnd[0]),\n            colHigh: Math.max(bcStart[1], bcEnd[1]),\n            color: `rgb(${randomNum()}, ${randomNum()}, ${randomNum()})`,\n            id: randomNum() + randomNum() + randomNum(),\n            location: '',\n            bcWidth: 100,\n            shHeight: 30,\n            shelves: []\n        }\n        setBookcases([...bookcases, newBc])\n\n      setBcStart(\"\");\n      setBcEnd(\"\");\n    }\n  };\n\n  const roomConstruct = (h, w, rn, ti, bc) => {\n    return {\n      height: h ? h : height,\n      width: w ? w : width,\n      roomName: rn ? rn : roomName,\n      tile: ti ? ti : tile,\n      bookcases: bc ? bc : bookcases,\n    }\n  }\n\n  function switchRoom (prevOrNex, currentRooms) {\n    let newIndex = rIndex + prevOrNex\n    if (!prevOrNex) newIndex = currentRooms.length - 1\n    console.log(newIndex, currentRooms.length)\n\n    if (currentRooms.length) {\n      if (newIndex < 0 || newIndex > currentRooms.length - 1) return\n    }\n    \n    let newRoom = currentRooms[newIndex]\n\n    // If we deleted the last saved room\n    if (newIndex < 0) {\n      newRoom = roomConstruct(10, 10, \"New Room\", 25, [])\n      newRoom.id = randomNum() + randomNum() + randomNum()\n      console.log('last deleted: ', newRoom)\n      newIndex = 0\n    }\n\n    setRIndex(newIndex)\n    setHeight(newRoom.height)\n    setWidth(newRoom.width)\n    setTile(newRoom.tile)\n    setRoomName(newRoom.roomName)\n    setBookcases(newRoom.bookcases)\n    // setCurrent({ rm: null, bc: null })\n    dispatch({ type: SET_CURRENT, payload: { rm: null, bc: null }})\n\n  }\n\n  function handleSubmit (e) {\n    e.preventDefault()\n\n    let room = roomConstruct()\n\n    if (currentRoom.id) {\n      room.id = currentRoom.id\n      dispatch({ type: UPDATE_ROOM, payload: room })\n    }\n    else {\n      room.id = randomNum() + randomNum() + randomNum()\n      dispatch({ type: ADD_ROOM, payload: { room } })\n    }\n  }\n\n  const newBlankRoom = () => {\n    alert('newblank')\n    let room = roomConstruct(10, 10, \"New Room\", 25, [])\n    room.id = randomNum() + randomNum() + randomNum()\n    dispatch({ type: ADD_ROOM, payload: { room } })\n  }\n\n  const removeARoom = () => {\n    let room = roomConstruct()\n    room.id = currentRoom.id\n    dispatch({ type: REMOVE_ROOM, payload: { room } })\n  }\n\n\n  return (\n    <div className=\"newroom\">\n      <h3>{roomName} ({rIndex})</h3>\n      <div className=\"pm-r pl-room\" onClick={newBlankRoom}>+</div>\n      <div className=\"pm-r min-room\" style={rooms.length ? null : { opacity: .2, pointerEvents: 'none' }} onClick={removeARoom}>-</div>\n      <div className=\"room-sec\">\n        <div className={`arrw ${!rIndex ? 'hde' : ''}`} id=\"lft\" onClick={() => switchRoom(-1, rooms)}>\n          <span>{'<'}</span>\n        </div>\n        <div className=\"room-map\" ref={mapRef} onClick={handleBoxClick}></div>\n        <div className={`arrw ${!rooms.length || rIndex + 1 === rooms.length ? 'hde' : ''}`} id=\"rit\" onClick={() => switchRoom(1, rooms)}>\n          <span>{'>'}</span>\n        </div>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={(e) => setHeight(e.target.value)}\n          placeholder=\"height\"\n          value={height}\n        />\n        <input\n          onChange={(e) => setWidth(e.target.value)}\n          placeholder=\"width\"\n          value={width}\n        />\n        <input\n          onChange={(e) => setTile(e.target.value)}\n          placeholder=\"tile size\"\n          value={tile}\n        />\n        <input\n          onChange={(e) => setRoomName(e.target.value)}\n          placeholder=\"room name\"\n          value={roomName}\n        />\n        <button>Save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewRoom;\n","/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/Bookcases.js",[],"/Users/JadeDRB/Desktop/Programming/p-lib/frontend/src/components/NewBookcase.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":32,"column":6,"nodeType":"61","endLine":32,"endColumn":20,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'rooms' and 'switchRoom'. Either include them or remove the dependency array.","ArrayExpression",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [rooms, rooms.length, switchRoom]",{"range":"68","text":"69"},[992,1006],"[rooms, rooms.length, switchRoom]"]